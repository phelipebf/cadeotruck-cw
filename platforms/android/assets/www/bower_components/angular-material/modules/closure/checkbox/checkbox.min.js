/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.10.1-master-f491e6d
 */
function MdCheckboxDirective(e,n,i,t,c,o,a){function d(n,d){return d.type="checkbox",d.tabindex=d.tabindex||"0",n.attr("role",d.type),function(n,d,l,s){function u(e,i,t){l[e]&&n.$watch(l[e],function(e){t[e]&&d.attr(i,t[e])})}function m(e){var n=e.which||e.keyCode;(n===t.KEY_CODE.SPACE||n===t.KEY_CODE.ENTER)&&(e.preventDefault(),d.hasClass("md-focused")||d.addClass("md-focused"),p(e))}function p(e){d[0].hasAttribute("disabled")||n.$apply(function(){var n=l.ngChecked?l.checked:!s.$viewValue;s.$setViewValue(n,e&&e.type),s.$render()})}function v(){s.$viewValue?d.addClass(r):d.removeClass(r)}s=s||o.fakeNgModel(),c(d),l.ngChecked&&n.$watch(n.$eval.bind(n,l.ngChecked),s.$setViewValue.bind(s)),u("ngDisabled","tabindex",{"true":"-1","false":l.tabindex}),i.expectWithText(d,"aria-label"),e.link.pre(n,{on:angular.noop,0:{}},l,[s]),n.mouseActive=!1,d.on("click",p).on("keypress",m).on("mousedown",function(){n.mouseActive=!0,a(function(){n.mouseActive=!1},100)}).on("focus",function(){n.mouseActive===!1&&d.addClass("md-focused")}).on("blur",function(){d.removeClass("md-focused")}),s.$render=v}}e=e[0];var r="md-checked";return{restrict:"E",transclude:!0,require:"?ngModel",priority:210,template:'<div class="md-container" md-ink-ripple md-ink-ripple-checkbox><div class="md-icon"></div></div><div ng-transclude class="md-label"></div>',compile:d}}goog.provide("ng.material.components.checkbox"),goog.require("ng.material.core"),angular.module("material.components.checkbox",["material.core"]).directive("mdCheckbox",MdCheckboxDirective),MdCheckboxDirective.$inject=["inputDirective","$mdInkRipple","$mdAria","$mdConstant","$mdTheming","$mdUtil","$timeout"],ng.material.components.checkbox=angular.module("material.components.checkbox");